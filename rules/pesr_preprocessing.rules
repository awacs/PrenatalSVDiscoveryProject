

SOURCES = config['pesr_sources']
SVTYPES = config['svtypes']

with open(config['quads']) as qlist:
    QUADS = [q.strip() for q in qlist.readlines()]

wildcard_constraints:
    source='(' + '|'.join(SOURCES) + ')'

rule standardize_vcf:
    input:
        'data/raw_vcfs/{source}/{source}.{quad}.vcf.gz'
    output:
        'preprocessing/std_vcfs/{source}.{quad}.vcf'
    shell:
        """
        standardize_vcf {input} {output} {wildcards.source}
        """

rule identify_vcf_outliers:
    input:
        expand('preprocessing/std_vcfs/{{source}}.{quad}.vcf', quad=QUADS)
    output:
        'preprocessing/outliers/{source}.list'
    params:
        svtypes=SVTYPES
    script:
        "scripts/find_outliers.py"

rule remove_vcf_outliers:
    input:
        vcf='preprocessing/std_vcfs/{source}.{quad}.vcf',
        outliers='preprocessing/outliers/{source}.list'
    output:
        'preprocessing/filtered_vcfs/{source}.{quad}.vcf'
    script:
        "scripts/remove_outliers.py"

