
module_config = config['RdTest']

with open(config['chroms']) as clist:
    CHROMS = [c.strip() for c in clist.readlines()]

def rdtest_bed(wildcards):
    if wildcards.source == 'depth':
        path = 'integration/depth/rdtest_beds/cohort.{chrom}.bed'
    else:
        path = 'integration/pesr/rdtest_beds/{source}/cohort.{chrom}.bed'
    return path.format(**wildcards)

print(module_config)

rule RdTest:
    input:
        bed=rdtest_bed
    params:
        **module_config
    output:
        pk='rdtest/{source}/cohort.{chrom}.bed.pk',
        zrank='rdtest/{source}/cohort.{chrom}.bed_HomPowerPZRank.txt',
    shell:
         """
         Rscript {params.gt_script} \
           -b {input.bed} \
           -o rdtest/{wildcards.source} \
           -n cohort.{wildcards.chrom}.bed \
           -c {params.covfile} \
           -m {params.medianfile} \
           -f {params.famfile} \
           -l {params.blacklist} \
           > /dev/null;
         """
        # """
        # cp {input.bed} {output.pk};
        # cp {input.bed} {output.zrank};
        # """

rule rdtest_filter:
    input:
        zrank='rdtest/{source}/cohort.{chrom}.bed_HomPowerPZRank.txt',
    output:
        list='rdtest/{source}/cohort.rdtest_pass.{chrom}.list'
    shell:
        """
        sed '1d' {input} | cut -f4 > {output}
        """
    

# rule make_pk_list:
#     input:
#         expand('data/genotyping/{vs}.bed.pk', vs=variants)
#     output:
#         'scratch/reassigned.pk.list'
#     run:
#         with open(output[0], 'w') as fout:
#             for fname in input:
#                 fout.write(fname + '\n')
# 
# 
# rule merge_pk: 
#     input:
#         'scratch/reassigned.pk.list'
#     output:
#         'data/gt_results/reassigned.pk'
#     shell:
#         """
#         cat {input} \
#           | xargs cat \
#           | sed -e '/^Chr/d' \
#           | sort -k1,1V -k2,2n \
#           | uniq \
#           | cat <(head -n1 {input} | xargs cat | head -n1) - \
#           > {output}
#         """
# 
# rule gt_filter:
#     input:
#         'data/gt_results/reassigned.pk'
#     output:
#         'data/gt_results/reassigned.gt_filter.pk'
#     shell:
#         """
#         ./scripts/gt_filter.py {input} > {output}
#         """
# 
