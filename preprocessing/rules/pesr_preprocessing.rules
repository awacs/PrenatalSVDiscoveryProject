

SOURCES = config['pesr_sources']
SVTYPES = config['svtypes']

with open(config['quads']) as qlist:
    QUADS = [q.strip() for q in qlist.readlines()]

rule standardize_vcf:
    input:
        'data/raw_vcfs/{source}/{source}.{quad}.vcf.gz'
    output:
        vcf='std_vcfs/{source}.{quad}.vcf'
    shell:
        """
        svtools standardize {input} {output} {wildcards.source}
        """

rule identify_vcf_outliers:
    input:
        expand(rules.standardize_vcf.output.vcf, quad=QUADS, source='{source}')
    output:
        outliers='outliers/{source}.list'
    params:
        svtypes=SVTYPES
    script:
        "scripts/find_outliers.py"

rule remove_vcf_outliers:
    input:
        vcf=rules.standardize_vcf.output.vcf,
        outliers=rules.identify_vcf_outliers.output.outliers
    output:
        vcf=temp('filtered_vcfs/{source}.{quad}.vcf')
    script:
        "scripts/remove_outliers.py"

rule sort_vcfs:
    input:
        vcf=rules.remove_vcf_outliers.output.vcf
    output:
        vcf='filtered_vcfs/{source}.{quad}.vcf.gz',
        idx='filtered_vcfs/{source}.{quad}.vcf.gz.tbi',
    shell:
        """
        vcf-sort -c {input} | bgzip -c > {output.vcf};
        tabix -p vcf {output.vcf}
        """

