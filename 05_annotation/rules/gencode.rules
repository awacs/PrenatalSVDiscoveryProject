

rule get_canonical_transcripts:
    output:
        transcripts='gencode/gencode.canonical_transcripts.txt'
    shell:
        """
        ./scripts/get_canonical_transcripts.py \
          {config[gencode][annotation_gtf]} \
          {config[gencode][pc_translations_fa]} \
          {config[gencode][pc_transcripts_fa]} \
          {config[gencode][transcript_source]} \
          {output.transcripts}
        """

rule make_canonical_gtf:
    input:
        canon='gencode/gencode.canonical_transcripts.txt',
    output:
        gtf='gencode/gencode.protein_coding.gtf.gz'
    shell:
        """
        cat \
            <(cut -f2 {input.canon} | sed -e '1d' | fgrep -w -f - <(zcat {config[gencode][annotation_gtf]})) \
            <(cut -f1 {input.canon} | sed -e '1d' | fgrep -w -f - <(zcat {config[gencode][annotation_gtf]}) | awk '($3=="gene")') \
          | sort -k1,1V -k4,4n \
          | sed -e 's/^chr//' \
          | bgzip -c \
          > {output.gtf}
        """

rule make_promoters:
    input:
        gtf='gencode/gencode.protein_coding.gtf.gz'
    output:
        gtf='gencode/gencode.protein_coding.promoter.bed'
    params:
        window=1000
    shell:
        """
        ./scripts/make_promoters.sh {input} {params.window} > {output}
        """

rule subset_gtf:
    input:
        genelist='genelists/geneSet_{subset}.genes.list'
    output:
        gtf='gencode/gencode.{subset}.gtf.gz',
    wildcard_constraints:
        subset='(antisense|lincRNA|processed_transcript|pseudogene)'
    shell:
        """
        zcat {config[gencode][annotation_gtf]} \
          | fgrep -w -f <(awk '{{print "gene_name \\""$1"\\";"}}' {input.genelist}) - \
          | fgrep -e "gene_type \\"{wildcards.subset}\\"" - \
          | sort -k1,1V -k4,4n \
          | sed -e 's/^chr//' \
          | bgzip -c \
          > {output}
        """
