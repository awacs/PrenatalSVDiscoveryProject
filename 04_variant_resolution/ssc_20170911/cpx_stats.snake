
DIRNAMES = ['link300',
            'link100',
            'armfix',
            'dupfix',
            'PE_filter',
            'chr2fix']
DIRNAMES = ['chr2fix']

#DIRNAMES = ['resolved_with_melt_link100']

CHROMS = [str(x) for x in range(1, 23)] + 'X Y'.split()
#CHROMS = '3 4 5 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 X Y'.split()

rule all:
    input:
        'cpx_stats/cpx_counts.txt'

rule make_bed:
    input:
        'complex_resolution/resolved_with_melt_{dirname}/SSC.{chrom}.vcf.gz'
    output:
        'cpx_beds/{dirname}/SSC.{chrom}.bed'
    shell:
        """
        svtools vcf2bed -i CPX_TYPE {input} stdout \
          | fgrep -e "CPX" -e "melt" \
          > {output}
        """

rule count_svtypes:
    input:
        expand('cpx_beds/{{dirname}}/SSC.{chrom}.bed', 
                chrom=CHROMS)
    output:
        'cpx_stats/{dirname}.counts.txt'
    shell:
        """
        cat {input} \
          | fgrep -v -e "#chrom" \
          | awk '{{ if ($7=="NA") {{print $5;}} else {{ print $7; }} }}' \
          | sort | uniq -c \
          | awk -v OFS="\\t" '{{print $2, "{wildcards.dirname}", $1}}' \
          | sed -e 's/resolved_with_melt_//' > {output}
        """

rule merge_counts:
    input:
        expand('cpx_stats/{dirname}.counts.txt', dirname=DIRNAMES),
    output:
        'cpx_stats/cpx_counts.txt'
    shell:
        """
        cat <(echo -e "cpx_type\\tbatch\\tcount") {input} > {output}
        """
