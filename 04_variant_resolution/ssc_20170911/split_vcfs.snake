
import pandas as pd

EVIDENCE = 'pesr depth'.split()
RF_STATUS = 'pass raw'.split()
CHROMS = [str(x) for x in range(1, 23)] + 'X Y'.split()

rule all:
    input:
        expand('split_dn_check/{evidence}/{rf_status}/split_logs/{batch}.{chrom}.done',
               evidence=EVIDENCE, rf_status=RF_STATUS, batch=['Pilot'], chrom=CHROMS),
        expand('split_dn_check/{evidence}/{rf_status}/split_logs/{batch}.{chrom}.done',
               evidence=EVIDENCE, rf_status=['pass'], batch=['Phase1'], chrom=CHROMS)

rule get_candidates:
    input:
        'vcfcluster/{evidence}/{rf_status}/{batch}.{chrom}.vcf.gz'
    output:
        'split_dn_check/{evidence}/{rf_status}/candidates/{batch}.{chrom}.vcf.gz'
    shell:
        """
        ../scripts/get_denovo_candidates.py {input} stdout | bgzip -c > {output}
        """

rule split_vcf:
    input:
        'split_dn_check/{evidence}/{rf_status}/candidates/{batch}.{chrom}.vcf.gz'
    output:
        touch('split_dn_check/{evidence}/{rf_status}/split_logs/{batch}.{chrom}.done')
    params:
        prefix='split_dn_check/{evidence}/{rf_status}/splits/{batch}.{chrom}.'
    wildcard_constraints:
        evidence='(pesr|depth)'
    shell:
        """
        split_dir=$(dirname {params.prefix});
        mkdir -p $split_dir;
        zcat {input} \
          | sed -e '/^#/d' \
          | split -a 4 -d -l 50 - {params.prefix}
        """
